name: Node Application

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        type: string

      server_ip:
        description: 'Public IP address of the deployment server'
        required: true
        type: string

      server_user:
        description: 'SSH user for the remote server (e.g., ubuntu)'
        required: true
        type: string

      ssh_key_filename:
        description: 'SSH key filename (without path)'
        required: false
        type: string
        default: 'id_ed25519'

      app:
        description: 'Absolute path to the app directory on the server'
        required: true
        type: string

      process_name:
        description: 'PM2 process name used to identify/restart the app'
        required: true
        type: string

      script:
        description: 'Optional post-deployment shell commands'
        required: false
        type: string
        default: ''

      start_command:
        description: 'Yarn start command (e.g., start:prod, start:staging)'
        required: false
        type: string
        default: 'start'

      require_env:
        description: 'Require .env file to be present before building'
        required: false
        type: boolean
        default: true

    secrets:
      ssh_key:
        description: 'Private SSH key with access to the server'
        required: true

jobs:
  deploy:
    name: Deploy Node.js App
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v3

      - name: 📦 SCP Upload to Remote Host
        uses: appleboy/scp-action@master
        with:
          host: ${{ inputs.server_ip }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.ssh_key}}
          source: "."
          target: "/var/www/temp/${{ inputs.app }}"

      - name: 🚀 Build & Replace Server Files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ inputs.server_ip }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.ssh_key}}
          script: |
            set -e # ⛔ Exit immediately if any command fails

            cd /var/www

            echo "🔍 Checking if .env is required and present..."
            if [ "${{ inputs.require_env }}" = "true" ] && [ ! -f "${{ inputs.app }}/.env" ]; then
              echo "❌ .env file is required but not found!"
              exit 1
            fi

            
            echo "📦 Copying .env file to temp directory..."
            cp ${{ inputs.app }}/.env temp/${{ inputs.app }}

            echo "📂 Changing directory to temp/${{ inputs.app }}..."
            cd temp/${{ inputs.app }}

            echo "📥 Installing dependencies..."
            yarn install

            echo "🛠️ Building the project..."
            yarn build

            echo "🧹 Cleaning up old build directory..."
            rm -rf ${{ inputs.app }}

            echo "🚚 Moving new build to production directory..."
            mv temp/${{ inputs.app }} ${{ inputs.app }}

            echo "🧽 Removing temporary build folder..."
            rm -rf temp/${{ inputs.app }}

            echo "📂 Changing directory to new app folder..."
            cd ${{ inputs.app }}

            echo "🔁 Restarting or starting app with PM2..."
            if ! pm2 describe "${{ inputs.process_name }}" > /dev/null 2>&1; then
              echo "🚀 Starting ${{ inputs.process_name }} with yarn ${{ inputs.start_command }}..."
              pm2 start yarn --name="${{ inputs.process_name }}" -- ${{ inputs.start_command }}
            else
              echo "♻️ Restarting ${{ inputs.process_name }}..."
              pm2 restart "${{ inputs.process_name }}"
            fi
